services:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: pinstack-kafka-ui
    ports:
      - "9091:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: pinstack-local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - pinstack


  ######################
  # ELK Stack
  ######################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: pinstack-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - pinstack
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: pinstack-logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - pinstack
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: pinstack-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - pinstack
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Filebeat для сбора логов Docker контейнеров
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: pinstack-filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_started
    networks:
      - pinstack
    command: [ "--strict.perms=false" ]

    ######################
    # Monitoring Stack   #
    ######################
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: pinstack-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - pinstack

  grafana:
    image: grafana/grafana:11.0.0
    container_name: pinstack-grafana
    ports:
      - "3000:3000"
    networks:
      - pinstack
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    user: root
    command: /bin/sh -c "ip link set dev eth0 mtu 1400 && /run.sh"

  loki:
    image: grafana/loki:2.9.4
    container_name: pinstack-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - pinstack

  promtail:
    image: grafana/promtail:2.9.4
    container_name: pinstack-promtail
    volumes:
      - /var/log:/var/log
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - pinstack
    depends_on:
      - loki

volumes:
  elasticsearch_data:
  filebeat_data:

networks:
  pinstack:
    external: true
